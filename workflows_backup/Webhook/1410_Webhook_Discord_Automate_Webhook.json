{
  "id": "180",
  "meta": {
    "instanceId": "workflow-instance",
    "versionId": "1.0.0",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  },
  "name": "Discord AI bot",
  "tags": [],
  "nodes": [
    {
      "id": "6f188270-2c08-491f-bf52-c4a152b33aa0",
      "name": "When clicking \"Execute Workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        1220,
        780
      ],
      "parameters": {},
      "typeVersion": 1
    },
    {
      "id": "e4839de2-fc04-40b0-b6bc-596455ad93fe",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [
        1220,
        580
      ],
      "webhookId": "d0cdd428-be96-4821-85bc-65342cf928d0",
      "parameters": {
        "path": "d0cdd428-be96-4821-85bc-65342cf928d0",
        "options": {},
        "httpMethod": "POST"
      },
      "typeVersion": 1
    },
    {
      "id": "15dcafe1-6361-4775-ace0-e34fd2a143b4",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2120,
        940
      ],
      "parameters": {},
      "typeVersion": 1
    },
    {
      "id": "0d28fe8e-da80-458b-9a75-d316019cb3ae",
      "name": "Analyze user request",
      "type": "n8n-nodes-base.openAi",
      "position": [
        1420,
        680
      ],
      "parameters": {
        "model": "gpt-4",
        "prompt": {
          "messages": [
            {
              "role": "system",
              "content": "Act as a service desk agent and help to categorize user messages. Return back only JSON without quotations. Do not return anything else."
            },
            {
              "content": "=Here is a user feedback: \"{{ $json.body.feedback }}\". Please analyse it and put into one of the categories:\n1. \"success-story\" for user appraisal or success story. this will be processed by customer success department\n2. \"urgent-issue\" for extreme dissatisfaction or an urgent problem. this will be escalated to the IT team. Please assess if the request is really urgent and whether it has an immediate impact on the client. If the ticket doesn't look like an immediate problem or an extreme dissatisfaction then proceed as a normal ticket.\n3. \"ticket\" for everything else. This will be processed as normal by customer support team.\n\nPlease return back a JSON with the following structure: category (string), feedback (string), instruction (string).\nCategory must match the analysed category. feedback must match the original text. instruction should contain a text for a department according to the category with a one sentense summary of the feedback. Please be polite and friendly to the colleagues."
            }
          ]
        },
        "options": {
          "maxTokens": "YOUR_TOKEN_HERE",
          "temperature": 0.5
        },
        "resource": "chat"
      },
      "credentials": {
        "openAiApi": {
          "id": "{{ $credentials.openAiApi.id }}",
          "name": "OpenAi account"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "ce1c4198-ce21-4436-9ccb-4a2a078cd06e",
      "name": "Select category",
      "type": "n8n-nodes-base.switch",
      "position": [
        1840,
        680
      ],
      "parameters": {
        "rules": {
          "rules": [
            {
              "value2": "success-story"
            },
            {
              "output": 1,
              "value2": "urgent-issue"
            },
            {
              "output": 2,
              "value2": "ticket"
            }
          ]
        },
        "value1": "={{ $json.gpt_reply.category.toLowerCase() }}",
        "dataType": "string",
        "fallbackOutput": 3
      },
      "typeVersion": 1
    },
    {
      "id": "839cc38d-b393-4fc1-a068-47a8fcf55e3f",
      "name": "Parse JSON",
      "type": "n8n-nodes-base.set",
      "position": [
        1640,
        680
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "gpt_reply",
              "value": "={{ JSON.parse( $json.message.content.replace(/\\n(?=[^\"]*\"(?:[^\"]*\"[^\"]*\")*[^\"]*$)/g, '\\\\n')) }}"
            }
          ]
        },
        "options": {}
      },
      "typeVersion": 2
    },
    {
      "id": "4c150439-89af-42bd-bbdc-905d13ada76b",
      "name": "User Success Dept",
      "type": "n8n-nodes-base.discord",
      "position": [
        2120,
        460
      ],
      "parameters": {
        "text": "={{ $json.gpt_reply.instruction }}",
        "options": {},
        "webhookUri": "{{ $env.API_BASE_URL }}<YOUR WEBHOOK HERE>"
      },
      "typeVersion": 1
    },
    {
      "id": "9a5e5335-9e6c-4f1f-a0f0-b1b022956549",
      "name": "IT Dept",
      "type": "n8n-nodes-base.discord",
      "position": [
        2120,
        620
      ],
      "parameters": {
        "text": "={{ $json.gpt_reply.instruction }}",
        "options": {},
        "webhookUri": "{{ $env.API_BASE_URL }}<YOUR WEBHOOK HERE>"
      },
      "typeVersion": 1
    },
    {
      "id": "d6d6250a-3a24-49f1-a597-47ebc179949c",
      "name": "Helpdesk",
      "type": "n8n-nodes-base.discord",
      "position": [
        2120,
        780
      ],
      "parameters": {
        "text": "={{ $json.gpt_reply.instruction }}",
        "options": {},
        "webhookUri": "{{ $env.API_BASE_URL }}<YOUR WEBHOOK HERE>"
      },
      "typeVersion": 1
    },
    {
      "id": "error-handler-e4839de2-fc04-40b0-b6bc-596455ad93fe",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        800,
        400
      ],
      "parameters": {
        "message": "Error occurred in e4839de2-fc04-40b0-b6bc-596455ad93fe",
        "options": {}
      }
    },
    {
      "id": "documentation-node",
      "name": "Workflow Documentation 1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        100
      ],
      "parameters": {
        "content": "# Discord AI bot\n\nAutomated workflow: Discord AI bot. This workflow processes data and performs automated tasks.\n\n## Nodes:\n- 10 total nodes\n- Includes error handling\n- Follows best practices\n\n## Usage:\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production"
      }
    },
    {
      "id": "error-handler-e4839de2-fc04-40b0-b6bc-596455ad93fe-ad8db288",
      "name": "Error Handler for e4839de2",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node e4839de2",
        "options": {}
      }
    },
    {
      "id": "error-handler-0d28fe8e-da80-458b-9a75-d316019cb3ae-da55978e",
      "name": "Error Handler for 0d28fe8e",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node 0d28fe8e",
        "options": {}
      }
    },
    {
      "id": "error-handler-4c150439-89af-42bd-bbdc-905d13ada76b-f3c5d345",
      "name": "Error Handler for 4c150439",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node 4c150439",
        "options": {}
      }
    },
    {
      "id": "error-handler-9a5e5335-9e6c-4f1f-a0f0-b1b022956549-119f79b9",
      "name": "Error Handler for 9a5e5335",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node 9a5e5335",
        "options": {}
      }
    },
    {
      "id": "error-handler-d6d6250a-3a24-49f1-a597-47ebc179949c-2fc048bb",
      "name": "Error Handler for d6d6250a",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node d6d6250a",
        "options": {}
      }
    },
    {
      "id": "documentation-de8b786c",
      "name": "Workflow Documentation 2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        50
      ],
      "parameters": {
        "content": "# Discord AI bot\n\n## Overview\nAutomated workflow: Discord AI bot. This workflow processes data and performs automated tasks.\n\n## Workflow Details\n- **Total Nodes**: 16\n- **Node Types**: 9\n- **Error Handling**: ✅ Implemented\n- **Security**: ✅ Hardened (no sensitive data)\n- **Documentation**: ✅ Complete\n\n## Node Breakdown\n- **When clicking \"Execute Workflow\"**: manualTrigger\n- **Webhook**: webhook\n- **No Operation, do nothing**: noOp\n- **Analyze user request**: openAi\n- **Select category**: switch\n- **Parse JSON**: set\n- **User Success Dept**: discord\n- **IT Dept**: discord\n- **Helpdesk**: discord\n- **Error Handler**: stopAndError\n- ... and 6 more nodes\n\n## Usage Instructions\n1. **Configure Credentials**: Set up all required API keys and credentials\n2. **Update Variables**: Replace any placeholder values with actual data\n3. **Test Workflow**: Run in test mode to verify functionality\n4. **Deploy**: Activate the workflow for production use\n\n## Security Notes\n- All sensitive data has been removed or replaced with placeholders\n- Error handling is implemented for reliability\n- Follow security best practices when configuring credentials\n\n## Troubleshooting\n- Check error logs if workflow fails\n- Verify all credentials are properly configured\n- Ensure all required services are accessible\n"
      }
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "callerPolicy": "workflowsFromSameOwner",
    "saveManualExecutions": true,
    "saveDataSuccessExecution": "all",
    "executionOrder": "v1",
    "errorWorkflow": null,
    "timezone": "UTC"
  },
  "versionId": "8871171e-7e18-49ee-a570-facbe97afb79",
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Analyze user request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse JSON": {
      "main": [
        [
          {
            "node": "Select category",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select category": {
      "main": [
        [
          {
            "node": "User Success Dept",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "IT Dept",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Helpdesk",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze user request": {
      "main": [
        [
          {
            "node": "Parse JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking \"Execute Workflow\"": {
      "main": [
        [
          {
            "node": "Analyze user request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "e4839de2-fc04-40b0-b6bc-596455ad93fe": {
      "main": [
        [
          {
            "node": "error-handler-e4839de2-fc04-40b0-b6bc-596455ad93fe",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "error-handler-e4839de2-fc04-40b0-b6bc-596455ad93fe-ad8db288",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "0d28fe8e-da80-458b-9a75-d316019cb3ae": {
      "main": [
        [
          {
            "node": "error-handler-0d28fe8e-da80-458b-9a75-d316019cb3ae-da55978e",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "4c150439-89af-42bd-bbdc-905d13ada76b": {
      "main": [
        [
          {
            "node": "error-handler-4c150439-89af-42bd-bbdc-905d13ada76b-f3c5d345",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "9a5e5335-9e6c-4f1f-a0f0-b1b022956549": {
      "main": [
        [
          {
            "node": "error-handler-9a5e5335-9e6c-4f1f-a0f0-b1b022956549-119f79b9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "d6d6250a-3a24-49f1-a597-47ebc179949c": {
      "main": [
        [
          {
            "node": "error-handler-d6d6250a-3a24-49f1-a597-47ebc179949c-2fc048bb",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "description": "Automated workflow: Discord AI bot. This workflow processes data and performs automated tasks."
}