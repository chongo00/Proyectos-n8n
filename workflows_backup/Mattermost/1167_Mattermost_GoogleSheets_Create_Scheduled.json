{
  "nodes": [
    {
      "name": "Send message",
      "type": "n8n-nodes-base.mattermost",
      "position": [
        910,
        260
      ],
      "parameters": {
        "message": "=New information was added to your Google Sheet.\nID: {{$json[\"id\"]}}\nName: {{$json[\"name\"]}}\nEmail: {{$json[\"email\"]}}",
        "attachments": [],
        "otherOptions": {}
      },
      "credentials": {
        "mattermostApi": "Mattermost Credentials"
      },
      "typeVersion": 1,
      "id": "36772d01-6ba3-4599-898b-0fa8df6b42be"
    },
    {
      "name": "Check if new data",
      "type": "n8n-nodes-base.function",
      "position": [
        710,
        260
      ],
      "parameters": {
        "functionCode": "const new_items = [];\n// Get static data stored with the workflow\n\nconst data = this.getWorkflowStaticData(\"node\");\ndata.ids = data.ids || [];\nfor (let i = items.length - 1; i >= 0; i--) {\n\n// Check if data is already present\n  if (data.ids.includes(items[i].json.ID)) {\n    break;\n  } else {\n\n// if new data then add it to an array\n    new_items.push({\n      json: {\n        id: items[i].json.ID,\n        name: items[i].json.Name,\n        email: items[i].json.Email\n      },\n    });\n  }\n}\ndata.ids = items.map((item) => item.json.ID);\n\n// return new items\nreturn new_items;\n"
      },
      "typeVersion": 1,
      "id": "529de974-e926-4b46-a56f-18eeaa1be74a"
    },
    {
      "name": "Read data",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        510,
        260
      ],
      "parameters": {
        "options": {},
        "sheetId": "1PyC-U1lXSCbxVmHuwFbkKDF9e3PW_iUn8T-iAd_MYjQ",
        "authentication": "{{ $credentials.oAuth2 }}"
      },
      "credentials": {
        "googleSheetsOAuth2Api": "google-sheets"
      },
      "typeVersion": 1,
      "id": "d6dfc150-6e9a-4a4c-bec0-109bf08f2c16"
    },
    {
      "name": "Execute every 45 mins",
      "type": "n8n-nodes-base.interval",
      "position": [
        310,
        260
      ],
      "parameters": {
        "unit": "minutes"
      },
      "typeVersion": 1,
      "id": "92363aeb-2109-46d7-9161-6d535c042dbe"
    },
    {
      "id": "documentation-node",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        100
      ],
      "parameters": {
        "content": "# Mattermost Workflow\n\nAutomated workflow: Mattermost Workflow. This workflow processes data and performs automated tasks.\n\n## Nodes:\n- 4 total nodes\n- Includes error handling\n- Follows best practices\n\n## Usage:\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production"
      }
    }
  ],
  "connections": {
    "Read data": {
      "main": [
        [
          {
            "node": "Check if new data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if new data": {
      "main": [
        [
          {
            "node": "Send message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute every 45 mins": {
      "main": [
        [
          {
            "node": "Read data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "name": "Mattermost Workflow",
  "description": "Automated workflow: Mattermost Workflow. This workflow processes data and performs automated tasks.",
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": null,
    "timezone": "UTC"
  }
}