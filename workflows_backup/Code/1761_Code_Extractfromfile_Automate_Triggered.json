{
  "id": "XbawQw3cvClu2wsx",
  "meta": {
    "instanceId": "workflow-instance",
    "versionId": "1.0.0",
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  },
  "name": "Automated Image Metadata Tagging",
  "tags": [],
  "nodes": [
    {
      "id": "cd1dba71-345b-45ae-8110-4fb57291f363",
      "name": "Extract from File",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        260,
        180
      ],
      "parameters": {
        "options": {},
        "operation": "binaryToPropery"
      },
      "typeVersion": 1
    },
    {
      "id": "7973b64e-ae92-44c9-aa8e-002c32c25def",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "position": [
        920,
        80
      ],
      "parameters": {
        "options": {},
        "operation": "toBinary",
        "sourceProperty": "data"
      },
      "typeVersion": 1.1
    },
    {
      "id": "5fe13d4e-566b-459f-8830-f16829a34284",
      "name": "Analyze Image Content",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        260,
        -40
      ],
      "parameters": {
        "text": "=Deliver a comma seperated list describing the content of this image.",
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "chatgpt-4o-latest",
          "cachedResultName": "CHATGPT-4O-LATEST"
        },
        "options": {},
        "resource": "image",
        "inputType": "base64",
        "operation": "analyze"
      },
      "credentials": {
        "openAiApi": {
          "id": "EjchNb5GBqYh0Cqn",
          "name": "OpenAi account"
        }
      },
      "typeVersion": 1.8
    },
    {
      "id": "876db6b5-6615-4e9d-8e1a-2d8220b2019f",
      "name": "Download Image File",
      "type": "n8n-nodes-base.googleDrive",
      "position": [
        -20,
        60
      ],
      "parameters": {
        "fileId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $json.id }}"
        },
        "options": {},
        "operation": "download"
      },
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "s8l3OOBediUA645k",
          "name": "Google Drive account"
        }
      },
      "typeVersion": 3
    },
    {
      "id": "47b32ddb-1929-4855-9131-078b562b3492",
      "name": "Trigger: New file added to Google Drive Folder",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "position": [
        -220,
        60
      ],
      "parameters": {
        "event": "fileCreated",
        "options": {},
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "mode": "list",
          "value": "1WaIRWXcaeNViKmpW5IyQ3YGARWYdMg47",
          "cachedResultUrl": "{{ $env.WEBHOOK_URL }}",
          "cachedResultName": "EXIF"
        }
      },
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "s8l3OOBediUA645k",
          "name": "Google Drive account"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "85c6458a-7b2a-4eef-bf28-3b784e45f562",
      "name": "Write Metadata to Base64 Code",
      "type": "n8n-nodes-base.code",
      "position": [
        720,
        80
      ],
      "parameters": {
        "jsCode": "const tags = items[0].json.content.split(', ');\n\nconst xmpData = `<?xpacket begin=\"ï»¿\" id=\"W5M0MpCehiHzreSzNTczkc9d\"?>\n<x:xmpmeta xmlns:x=\"adobe:ns:meta/\" x:xmptk=\"XMP Core 5.1.2\">\n    <rdf:RDF xmlns:rdf=\"{{ $env.WEBHOOK_URL }}\">\n        <rdf:Description rdf:about=\"\"\n            xmlns:dc=\"{{ $env.WEBHOOK_URL }}\"\n            xmlns:xmp=\"{{ $env.WEBHOOK_URL }}\"\n            xmlns:photoshop=\"{{ $env.WEBHOOK_URL }}\">\n            <dc:creator></dc:creator>\n            <dc:subject>\n                <rdf:Bag>\n                    ${tags.map(tag => `<rdf:li>${tag}</rdf:li>`).join('\\n                    ')}\n                </rdf:Bag>\n            </dc:subject>\n            <xmp:CreateDate>${new Date().toISOString()}</xmp:CreateDate>\n        </rdf:Description>\n    </rdf:RDF>\n</x:xmpmeta>\n<?xpacket end=\"w\"?>`;\n\nconst xmpHeader = Buffer.from([\n    0xFF, 0xE1,\n    0x00, 0x00,\n    0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x6E, 0x73, 0x2E,\n    0x61, 0x64, 0x6F, 0x62, 0x65, 0x2E, 0x63, 0x6F, 0x6D, 0x2F,\n    0x78, 0x61, 0x70, 0x2F, 0x31, 0x2E, 0x30, 0x2F, 0x00\n]);\n\nconst xmpBuffer = Buffer.from(xmpData, 'utf8');\nconst imageBuffer = Buffer.from(items[0].json.data, 'base64');\nconst length = xmpHeader.length + xmpBuffer.length - 2;\nxmpHeader[2] = (length >> 8) & 0xFF;\nxmpHeader[3] = length & 0xFF;\n\nconst newImageData = Buffer.concat([\n    imageBuffer.slice(0, 2),\n    xmpHeader,\n    xmpBuffer,\n    imageBuffer.slice(2)\n]);\n\nitems[0].json.data = newImageData.toString('base64');\n\nreturn items;"
      },
      "typeVersion": 2,
      "alwaysOutputData": true
    },
    {
      "id": "1b86cadf-9f46-4980-a923-00577bfc59f4",
      "name": "Update Image File",
      "type": "n8n-nodes-base.googleDrive",
      "position": [
        1120,
        80
      ],
      "parameters": {
        "fileId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $('Download Image File').item.json.id }}"
        },
        "options": {},
        "operation": "update",
        "changeFileContent": true,
        "newUpdatedFileName": "={{ $('Download Image File').item.json.name }}"
      },
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "s8l3OOBediUA645k",
          "name": "Google Drive account"
        }
      },
      "typeVersion": 3
    },
    {
      "id": "10c97623-80b1-4e96-b5c5-243ef106b2e9",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -540,
        240
      ],
      "parameters": {
        "width": 660,
        "height": 680,
        "content": "# Welcome to my Automated Image Metadata Tagging Workflow!\n\nThis workflow automatically analyzes the image content with the help of AI and writes it directly back into the image file as keywords.\n\n## This workflow has the following sequence:\n\n1. Google Drive trigger (scan for new files added in a specific folder)\n2. Download the added image file\n3. Analyse the content of the image and extract the file as Base64 code\n4. Merge Metadata and Base64 Code\n5. Code Node to write the Keywords into the Metadata (dc:subject)\n6. Convert to file and update the original file in the Google Drive folder\n\n## The following accesses are required for the workflow:\n- Google Drive: [Documentation]({{ $env.WEBHOOK_URL }}\n- AI API access (e.g. via OpenAI, Anthropic, Google or Ollama)\n\nYou can contact me via LinkedIn, if you have any questions: {{ $env.WEBHOOK_URL }}"
      },
      "typeVersion": 1
    },
    {
      "id": "d2bb1007-018d-4c6a-a458-ff8e79b6017c",
      "name": "Merge Metadata and Base64 Code",
      "type": "n8n-nodes-base.merge",
      "position": [
        520,
        80
      ],
      "parameters": {
        "mode": "combine",
        "options": {},
        "combineBy": "combineByPosition"
      },
      "typeVersion": 3
    },
    {
      "id": "error-handler-cd1dba71-345b-45ae-8110-4fb57291f363-08acadd6",
      "name": "Error Handler for cd1dba71",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node cd1dba71",
        "options": {}
      }
    },
    {
      "id": "error-handler-7973b64e-ae92-44c9-aa8e-002c32c25def-fb3d9dd9",
      "name": "Error Handler for 7973b64e",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node 7973b64e",
        "options": {}
      }
    },
    {
      "id": "error-handler-5fe13d4e-566b-459f-8830-f16829a34284-cd78c5e1",
      "name": "Error Handler for 5fe13d4e",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node 5fe13d4e",
        "options": {}
      }
    },
    {
      "id": "error-handler-876db6b5-6615-4e9d-8e1a-2d8220b2019f-c3e096b7",
      "name": "Error Handler for 876db6b5",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node 876db6b5",
        "options": {}
      }
    },
    {
      "id": "error-handler-47b32ddb-1929-4855-9131-078b562b3492-bc456d72",
      "name": "Error Handler for 47b32ddb",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node 47b32ddb",
        "options": {}
      }
    },
    {
      "id": "error-handler-1b86cadf-9f46-4980-a923-00577bfc59f4-6565d25f",
      "name": "Error Handler for 1b86cadf",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node 1b86cadf",
        "options": {}
      }
    },
    {
      "id": "documentation-8f6286c1",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        50
      ],
      "parameters": {
        "content": "# Automated Image Metadata Tagging\n\n## Overview\nAutomated workflow: Automated Image Metadata Tagging. This workflow integrates 9 different services: convertToFile, stickyNote, googleDriveTrigger, code, googleDrive. It contains 15 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 15\n- **Node Types**: 9\n- **Error Handling**: â Implemented\n- **Security**: â Hardened (no sensitive data)\n- **Documentation**: â Complete\n\n## Node Breakdown\n- **Extract from File**: extractFromFile\n- **Convert to File**: convertToFile\n- **Analyze Image Content**: openAi\n- **Download Image File**: googleDrive\n- **Trigger: New file added to Google Drive Folder**: googleDriveTrigger\n- **Write Metadata to Base64 Code**: code\n- **Update Image File**: googleDrive\n- **Sticky Note1**: stickyNote\n- **Merge Metadata and Base64 Code**: merge\n- **Error Handler for cd1dba71**: stopAndError\n- ... and 5 more nodes\n\n## Usage Instructions\n1. **Configure Credentials**: Set up all required API keys and credentials\n2. **Update Variables**: Replace any placeholder values with actual data\n3. **Test Workflow**: Run in test mode to verify functionality\n4. **Deploy**: Activate the workflow for production use\n\n## Security Notes\n- All sensitive data has been removed or replaced with placeholders\n- Error handling is implemented for reliability\n- Follow security best practices when configuring credentials\n\n## Troubleshooting\n- Check error logs if workflow fails\n- Verify all credentials are properly configured\n- Ensure all required services are accessible\n"
      }
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": null,
    "timezone": "UTC"
  },
  "versionId": "46b58de4-da62-43a2-bb10-fc85ffb75115",
  "connections": {
    "Convert to File": {
      "main": [
        [
          {
            "node": "Update Image File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Merge Metadata and Base64 Code",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Download Image File": {
      "main": [
        [
          {
            "node": "Analyze Image Content",
            "type": "main",
            "index": 0
          },
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze Image Content": {
      "main": [
        [
          {
            "node": "Merge Metadata and Base64 Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Write Metadata to Base64 Code": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Metadata and Base64 Code": {
      "main": [
        [
          {
            "node": "Write Metadata to Base64 Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Trigger: New file added to Google Drive Folder": {
      "main": [
        [
          {
            "node": "Download Image File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "cd1dba71-345b-45ae-8110-4fb57291f363": {
      "main": [
        [
          {
            "node": "error-handler-cd1dba71-345b-45ae-8110-4fb57291f363-08acadd6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "7973b64e-ae92-44c9-aa8e-002c32c25def": {
      "main": [
        [
          {
            "node": "error-handler-7973b64e-ae92-44c9-aa8e-002c32c25def-fb3d9dd9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "5fe13d4e-566b-459f-8830-f16829a34284": {
      "main": [
        [
          {
            "node": "error-handler-5fe13d4e-566b-459f-8830-f16829a34284-cd78c5e1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "876db6b5-6615-4e9d-8e1a-2d8220b2019f": {
      "main": [
        [
          {
            "node": "error-handler-876db6b5-6615-4e9d-8e1a-2d8220b2019f-c3e096b7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "47b32ddb-1929-4855-9131-078b562b3492": {
      "main": [
        [
          {
            "node": "error-handler-47b32ddb-1929-4855-9131-078b562b3492-bc456d72",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1b86cadf-9f46-4980-a923-00577bfc59f4": {
      "main": [
        [
          {
            "node": "error-handler-1b86cadf-9f46-4980-a923-00577bfc59f4-6565d25f",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "description": "Automated workflow: Automated Image Metadata Tagging. This workflow integrates 9 different services: convertToFile, stickyNote, googleDriveTrigger, code, googleDrive. It contains 15 nodes and follows best practices for error handling and security."
}