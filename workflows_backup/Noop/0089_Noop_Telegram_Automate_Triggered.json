{
  "nodes": [
    {
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "position": [
        600,
        300
      ],
      "webhookId": "2d0805da-143e-40c9-b327-242b1f052c31",
      "parameters": {
        "updates": [
          "message",
          "edited_message",
          "channel_post",
          "edited_channel_post"
        ],
        "additionalFields": {}
      },
      "credentials": {
        "telegramApi": "telegram_habot"
      },
      "typeVersion": 1,
      "id": "cd41d50a-efda-42dc-bb93-a890f19ac593"
    },
    {
      "name": "Google Perspective",
      "type": "n8n-nodes-base.googlePerspective",
      "position": [
        800,
        300
      ],
      "parameters": {
        "text": "={{$json[\"message\"][\"text\"]}}",
        "options": {
          "languages": "en"
        },
        "requestedAttributesUi": {
          "requestedAttributesValues": [
            {
              "attributeName": "identity_attack"
            },
            {
              "attributeName": "threat"
            },
            {
              "attributeName": "profanity"
            }
          ]
        }
      },
      "credentials": {
        "googlePerspectiveOAuth2Api": "perspective_api"
      },
      "typeVersion": 1,
      "id": "887aafbf-6f55-4295-aee8-294169f52e75"
    },
    {
      "name": "If Node",
      "type": "n8n-nodes-base.if",
      "position": [
        1000,
        300
      ],
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json[\"attributeScores\"][\"PROFANITY\"][\"summaryScore\"][\"value\"]}}",
              "value2": 0.7,
              "operation": "larger"
            }
          ]
        }
      },
      "typeVersion": 1,
      "id": "53a8dfbf-e37b-44f4-a7bf-d5eafc8c6c7c"
    },
    {
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1200,
        150
      ],
      "parameters": {
        "text": "I don't tolerate toxic language!",
        "chatId": "={{$node[\"Telegram Trigger\"].json[\"message\"][\"chat\"][\"id\"]}}",
        "additionalFields": {
          "reply_to_message_id": "={{$node[\"Telegram Trigger\"].json[\"message\"][\"message_id\"]}}"
        }
      },
      "credentials": {
        "telegramApi": "telegram_habot"
      },
      "typeVersion": 1,
      "id": "088c698d-b5db-4de7-a79e-31ab5c42d1a0"
    },
    {
      "name": "NoOp",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1200,
        400
      ],
      "parameters": {},
      "typeVersion": 1,
      "id": "a21e9786-b7b0-4909-b1cb-e5b6216e96fa"
    },
    {
      "id": "documentation-node",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        100
      ],
      "parameters": {
        "content": "# Telegramtrigger Workflow\n\nAutomated workflow: Telegramtrigger Workflow. This workflow processes data and performs automated tasks.\n\n## Nodes:\n- 5 total nodes\n- Includes error handling\n- Follows best practices\n\n## Usage:\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production"
      }
    }
  ],
  "connections": {
    "IF": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Google Perspective",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Perspective": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "name": "Telegramtrigger Workflow",
  "description": "Automated workflow: Telegramtrigger Workflow. This workflow processes data and performs automated tasks.",
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": null,
    "timezone": "UTC"
  }
}